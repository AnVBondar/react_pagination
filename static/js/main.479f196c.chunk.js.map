{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","numberOfPages","i","push","isFirstPage","isLastPage","className","cn","disabled","href","onClick","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","currentGroupOfItems","listOfItems","itemNumbers","result","itemsPart","count","length","getItems","fromItem","replace","toItem","id","value","onChange","event","target","htmlFor","elem","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.479f196c.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: string;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange = () => {},\n}) => {\n  const totalPages = Math.ceil(total / +perPage);\n  const numberOfPages = [];\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    numberOfPages.push(i);\n  }\n\n  const isFirstPage = (): boolean => {\n    if (currentPage === 1) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const isLastPage = (): boolean => {\n    if (currentPage === totalPages) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: isFirstPage() },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage()}\n          onClick={() => !isFirstPage() && onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {numberOfPages.map(page => (\n        <li\n          className={cn(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn(\n        'page-item',\n        { disabled: isLastPage() },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage()}\n          onClick={() => !isLastPage() && onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nfunction getItems(\n  listOfItems: string[],\n  itemNumbers: string,\n): string[][] {\n  const result = [];\n  let itemsPart = [];\n  let count = 0;\n\n  for (let i = 0; i < listOfItems.length; i += 1) {\n    if (i === listOfItems.length - 1) {\n      itemsPart.push(listOfItems[i]);\n      result.push(itemsPart);\n      break;\n    }\n\n    itemsPart.push(listOfItems[i]);\n    count += 1;\n\n    if (count === +itemNumbers) {\n      result.push(itemsPart);\n      itemsPart = [];\n      count = 0;\n    }\n  }\n\n  return result;\n}\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n  const groupedItems = getItems(items, perPage);\n  const currentGroupOfItems = groupedItems[currentPage - 1];\n  const fromItem = currentGroupOfItems[0].replace('Item ', '');\n  const toItem\n  = currentGroupOfItems[currentGroupOfItems.length - 1].replace('Item ', '');\n\n  const handlePage = (elem: number) => {\n    setCurrentPage(elem);\n  };\n\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromItem} - ${toItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangeSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePage}\n      />\n      <ul>\n        {currentGroupOfItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}